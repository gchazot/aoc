from __future__ import print_function
from unittest import TestCase
import timeit


def sum_consecutive(sequence):
    total = 0
    prev = sequence[-1]
    for c in sequence:
        if c == prev:
            total += int(c)
        prev = c
    return total


class SequenceTest(TestCase):
    def check_sequence(self, expected, sequence):
        self.assertEqual(expected, sum_consecutive(sequence))

    def test_1122(self):
        self.check_sequence(3, "1122")

    def test_1111(self):
        self.check_sequence(4, "1111")

    def test_1234(self):
        self.check_sequence(0, "1234")

    def test_91212129(self):
        self.check_sequence(9, "91212129")

    def test_perf(self):
        test_sequence = "1234567890" * 100
        self.assertGreater(1.0, timeit.timeit(lambda: sum_consecutive(test_sequence), number=1000))


def sum_halfway(sequence):
    total = 0
    half_length = len(sequence) / 2
    for i in range(half_length):
        if sequence[i] == sequence[i + half_length]:
            total += int(sequence[i])
    return total * 2


class HalfwayTest(TestCase):
    def check_sequence(self, expected, sequence):
        self.assertEqual(expected, sum_halfway(sequence))

    def test_1212(self):
        self.check_sequence(6, "1212")

    def test_1221(self):
        self.check_sequence(0, "1221")

    def test_123123(self):
        self.check_sequence(12, "123123")

    def test_12131415(self):
        self.check_sequence(4, "12131415")

    def test_perf(self):
        test_sequence = "1234567890" * 100
        self.assertGreater(1.0, timeit.timeit(lambda: sum_halfway(test_sequence), number=1000))


if __name__ == "__main__":
    my_sequence = ("89219596999173583791527386872954869423796749511541239937319456252694758533723" +
                   "37935682782652791998831971676347912931779861525662367183326175364872368797471" +
                   "67999983363832257912445756887314879229925864477761357139855548522513798899853" +
                   "89661238714668771626459994328941632672725652517395386153424497946658789542939" +
                   "91599249163644763195738955667953933684116723872636155821283776762936128927237" +
                   "62237191146714286233543514411813323197995953854871628225358543514157867372265" +
                   "71872427691169951497145884484934972627632913511824315569827121884434738745734" +
                   "36564463817992968932222561984844658737143117779374211615817981895541414742362" +
                   "39447612421883232173914183732126332838194648583472419154369952477422666389517" +
                   "56994442846461745712436934924247961242267324136177757646694662293224372855127" +
                   "32848379344975111143344214862622449829147344521139463612453773518498155848556" +
                   "91778894798219822463298387771923329337634394654439458564233259451453345316753" +
                   "24143826773943922549751527652242444153246254152819578281832691856224727849649" +
                   "57644353866673835775433851868272697322612231568243511648416484245649251987836" +
                   "25721396988984481558391866483955533972212164693898955412719161648411279149413" +
                   "44319289686425821549854382745843887135587933689272167593711195247918349698282" +
                   "51634562827476783646121355963735334477198673846675165722621242255856239742788" +
                   "33981365494628646614588114147473559138853453189448624976774641922469183942857" +
                   "69598637642894487685149791444387351386231948418178759357298744466976793952629" +
                   "44245312629995649485711423427411298623113113131667983634427457928962276428818" +
                   "93134498151552326647933689596516859342242244584714818773791567187322217164347" +
                   "85284375187597941519816562753426352782841454921723432236193778518517499325675" +
                   "34838763783325218245159771733975357842369236296367134691515263991495483228498" +
                   "31431526219478653861754364155275865511643923249858589466142474763778413826829" +
                   "22666339846756955574726719512952513891756178543644985593395153897399588195452" +
                   "11247533692238983128437347715323423832829874223341965851285265263242917776896" +
                   "89492346231786335851551413876834969878")
    print(sum_consecutive(my_sequence))
    print(sum_halfway(my_sequence))
